{
  "openapi": "3.1.1",
  "info": {
    "title": "Personal Library",
    "summary": "API que fornece uma forma de gerenciar acervos de livros.",
    "description": "Essa API pretende ser uma ferramenta na qual os usuários possam cadastrar e gerenciar coleções de livros e seu estado de leitura.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Developtment server"
    },
    {
      "url": "",
      "description": "Staging  server"
    },
    {
      "url": "",
      "description": "Production server"
    }
  ],

  "paths": {
    "/user": {
      "post": {
        "summary": "Insere informações de um novo usuário na base de dados.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserReqBody" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Set-Cookie": {
                "description": "Cookie de sessão contendo o token JWT",
                "schema": {
                  "$ref": "#/components/schemas/UserToken"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyToUserDefault"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Obtém informações detalhadas de um usuário na base de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyUserComplete"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Responsável pelo login dos usuários. Verifica as credenciais fornecidas pelo usuários com as presentes no banco de dados.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginReqBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Set-Cookie": {
                "description": "Cookie de sessão contendo o token JWT",
                "schema": {
                  "$ref": "#/components/schemas/UserToken"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyToUserDefault"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/user/password/{id}": {
      "patch": {
        "summary": "Responsável alteração das senhas dos usuários.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangePasswordReqBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/user/contact/{id}": {
      "patch": {
        "summary": "Responsável pelo alteração das informações de contato dos usuários.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateContactReqBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/personal_data/{id}": {
      "patch": {
        "summary": "Responsável pelo alteração das informações pessoais dos usuários.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonalDataReqBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/status/{id}": {
      "patch": {
        "summary": "Responsável pelo alteração do status dos usuários.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Novo status do usuário.",
                    "type": "string",
                    "enum": ["ATIVO", "SUSPENSO", "BANIDO"],
                    "example": "SUSPENSO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/delete/{id}": {
      "patch": {
        "summary": "Responsável remoção de um usuário.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },

    "/book": {
      "post": {
        "summary": "Adiciona um novo livro no banco de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBookReqBody" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyToBookDefault"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Busca todos ou uma certa quantidade de livros no banco de dados.",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "Quantidade de livros cuja informações são requeridas.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "10"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResBodyToBookSimplified"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "summary": "Busca as informações de um livro no banco de dados, a partir de seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id do livro cuja informações são requeridas.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyToBookDefault"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualiza as informações de um livro no banco de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id do livro na base de dados da aplicação.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReqBodyToBookUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove as informações de um livro no banco de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id do livro na base de dados da aplicação.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/book/search": {
      "get": {
        "summary": "Busca as informações de um livro no banco de dados.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Título do livro cuja informações são requeridas.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Duna"
            },
            "style": "simple"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Nome do autor do livro cuja informações são requeridas.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Jorge Amado"
            },
            "style": "simple"
          },
          {
            "name": "take",
            "in": "query",
            "description": "Quantidade de livros cuja informações são requeridas.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "10"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResBodyToBookSimplified"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },

    "/collection": {
      "post": {
        "summary": "Adiciona uma nova coleção de livros no banco de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionReqBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyToCollectionDefault"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          }
        }
      }
    },
    "/collection/{id}": {
      "get": {
        "summary": "Busca as informações de uma coleção no banco de dados, a partir de seu ID.",
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id da coleção cuja informações são requeridas.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResBodyToBookDefault"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar as informações de uma coleção no banco de dados, a partir de seu ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id da coleção cuja informações são deletadas.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/collection/user/{user_id}": {
      "get": {
        "summary": "Busca as informações de todas as coleções no banco de dados que pertencem a determinado usuário.",
        "parameters": [
          {
            "name": "user_id",
            "in": "params",
            "description": "Id do usuário que se quer obter as informações das coleções.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResBodyToCollectionSimplified"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/collection/update/info/{id}": {
      "patch": {
        "summary": "Altera as informações de uma coleção no banco de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id da coleção que se quer alterar as informações.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqBodyToUpdateCollectionInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    },
    "/collection/update/book/{id}": {
      "patch": {
        "summary": "Altera as informações dos livros uma coleção no banco de dados.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "Id da coleção que se quer alterar as informações.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67a0cf5ee43cbc3f689e3757"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqBodyToUpdateBookInCollection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "UserToken": {
        "type": "object",
        "properties": {
          "token": {
            "description": "Token utilizado para autenticação em várias rotas que necessitam que um usuário válido esteja logado.",
            "type": "string"
          }
        }
      },

      "ContatcData": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Email do usuário, consiste em um email válido que já NÃO esteja cadastrado.",
            "type": "string",
            "example": "example@email.com"
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array contendo os números de contato do usuário",
            "example": ["+5511911111111", "+5511922222222"]
          }
        }
      },

      "PersonalData": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Nome completo do usuário.",
            "type": "string",
            "example": "João da Silva"
          },
          "birth_date": {
            "description": "Data de nascimento do usuário.",
            "type": "string",
            "format": "date",
            "example": "2000-02-22"
          }
        }
      },

      "CreateUserReqBody": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Nome do usuário, consiste em uma apelido (nickname).",
            "type": "string",
            "example": "joao_silva"
          },
          "password": {
            "description": "Senha escolhida pelo usuário",
            "type": "string",
            "example": "12345678"
          },
          "access_level": {
            "description": "Nível de acesso que o novo usuário terá, caso o campo esteja vazio será tratado como common.",
            "type": "string",
            "enum": ["COMMON", "ADMINISTRATOR", "GUEST"],
            "example": "ADMINISTRATOR"
          },
          "contact": {
            "description": "Informações de contato do usuário, como email e telefones.",
            "$ref": "#/components/schemas/ContatcData"
          },
          "personal_data": {
            "description": "Informações de contato do usuário, como email e telefones.",
            "$ref": "#/components/schemas/PersonalData"
          }
        },
        "required": ["username", "password", "contact", "personal_data"]
      },
      "ResBodyUserComplete": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Nome do usuário, consiste em uma apelido (nickname).",
            "type": "string",
            "example": "joao_silva"
          },
          "access_level": {
            "description": "Nível de acesso que o novo usuário terá, caso o campo esteja vazio será tratado como common.",
            "type": "string",
            "enum": ["COMMON", "ADMINISTRATOR", "GUEST"],
            "example": "ADMINISTRATOR"
          },
          "contact": {
            "description": "Informações de contato do usuário, como email e telefones.",
            "$ref": "#/components/schemas/ContatcData"
          },
          "personal_data": {
            "description": "Informações de contato do usuário, como email e telefones.",
            "$ref": "#/components/schemas/PersonalData"
          }
        }
      },
      "ResBodyToUserDefault": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id do usuário na base de dados da aplicação.",
            "example": "67a0cf5ee43cbc3f689e3757"
          },
          "username": {
            "type": "string",
            "description": "Nome de usuário na base de dados",
            "example": "joao_silva"
          },
          "access_level": {
            "type": "string",
            "description": "Nível de acesso do usuáro.",
            "example": "COMMON"
          }
        }
      },
      "LoginReqBody": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Nome do usuário, consiste em uma apelido (nickname).",
            "type": "string",
            "example": "joao_silva"
          },
          "password": {
            "description": "Senha escolhida pelo usuário",
            "type": "string",
            "example": "12345678"
          }
        },
        "required": ["username", "password"]
      },
      "ChangePasswordReqBody": {
        "type": "object",
        "properties": {
          "current_password": {
            "description": "Senha atual",
            "type": "string",
            "example": "12345678"
          },
          "new_password": {
            "description": "Nova senha escolhida pelo usuário",
            "type": "string",
            "example": "123456789"
          }
        },
        "required": ["current_password", "new_password"]
      },
      "UpdateContactReqBody": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Novo email do usuário.",
            "type": "string",
            "example": "new_email@example.com"
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array contendo os novos números de contato do usuário",
            "example": ["+5511911111111", "+5511922222222"]
          }
        }
      },
      "UpdatePersonalDataReqBody": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Para corrigir algum erro no nome do usuário.",
            "type": "string",
            "example": "João Santos Silva"
          },
          "birth_date": {
            "description": "Para corrigir algum erro na data de nascimento do usuário.",
            "type": "string",
            "format": "date",
            "example": "2000-02-22"
          }
        }
      },

      "CreateBookReqBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Titulo do livro.",
            "example": "O Hobbit"
          },
          "author": {
            "type": "array",
            "description": "Autor(es) do livro.",
            "items": { "type": "string" },
            "example": ["J. R. R. Tolkien"]
          },
          "edition": {
            "type": "string",
            "description": "Edição do livro.",
            "example": "1"
          },
          "publication_year": {
            "type": "number",
            "description": "Ano no qual o livro foi publicado.",
            "example": 1937
          },
          "publisher": {
            "type": "string",
            "description": "Editora que publicou o livro.",
            "example": "Nova Fronteira"
          },
          "publication_location": {
            "type": "string",
            "description": "Local onde o livro foi publicado.",
            "example": "Rio de Janeiro"
          },
          "isbn": {
            "type": "string",
            "description": "ISBN do livro.",
            "example": "9788520904161"
          },
          "volume": {
            "type": "number",
            "description": "Volume do livro.",
            "example": 1
          },
          "genre": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AÇÃO E AVENTURA",
                "CLÁSSICOS",
                "COMÉDIA",
                "CONTOS",
                "DRAMA",
                "FANTASIA",
                "FICÇÃO CIENTÍFICA",
                "FICÇÃO HISTÓRICA",
                "FICÇÃO POLICIAL/CRIME",
                "HORROR/TERROR",
                "MISTÉRIO/SUSPENSE",
                "REALISMO MÁGICO",
                "ROMANCE",
                "ROMANCE CONTEMPORÂNEO",
                "ROMANCE HISTÓRIOCO",
                "CHICK-LIT",
                "ROMANCE DE ÉPOCA",
                "THRILLER/PSICOLÓGICO",
                "TRAGÉDIA",
                "WESTERN/FAROESTE",
                "YOUNG ADULT (YA)",
                "DISTOPIA",
                "AUTOBIOGRAFIA",
                "BIOGRAFIA",
                "MEMÓRIAS",
                "HISTÓRIA",
                "CIÊNCIA E TECNOLOGIA",
                "ECONOMIA E NEGÓCIOS",
                "EDUCAÇÃO",
                "FILOSOFIA",
                "PSICOLOGIA",
                "RELIGIÃO/ESPIRITUALIDADE",
                "AUTOAJUDA",
                "SAÚDE E BEM-ESTAR",
                "VIAGENS",
                "ARTE E De DESIGN",
                "GASTRONOMIA/CULINÁRIA",
                "ENSAIOS",
                "JORNALISMO/REPORTAGEM",
                "POLÍTICA E SOCIEDADE",
                "CONTOS DE FADAS",
                "LIVROS ILUSTRADOS",
                "FICÇÃO JUVENIL",
                "FÁBULAS",
                "POESIA LÍRICA",
                "POESIA ÉPICA",
                "TRAGÉDIA TEATRAL",
                "COMÉDIA TEATRAL",
                "DRAMA TEATRAL",
                "ANTOLOGIAS",
                "MANGAS E QUADRINHOS",
                "LIVROS INTERATIVOS",
                "LITERATURA EXPERIMENTAL"
              ]
            },
            "description": "Volume do livro.",
            "example": ["Fantasia", "Clássicos"]
          }
        },
        "required": [
          "title",
          "author",
          "edition",
          "publication_year",
          "publisher",
          "publication_location",
          "genre"
        ]
      },
      "ResBodyToBookDefault": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id do livro na base de dados da aplicação.",
            "example": "67a0cf5ee43cbc3f689e3757"
          },
          "title": {
            "type": "string",
            "description": "Titulo do livro.",
            "example": "O Hobbit"
          },
          "author": {
            "type": "array",
            "description": "Autor(es) do livro.",
            "items": { "type": "string" },
            "example": ["J. R. R. Tolkien"]
          },
          "edition": {
            "type": "string",
            "description": "Edição do livro.",
            "example": "1"
          },
          "publication_year": {
            "type": "number",
            "description": "Ano no qual o livro foi publicado.",
            "example": 1937
          },
          "publisher": {
            "type": "string",
            "description": "Editora que publicou o livro.",
            "example": "Nova Fronteira"
          },
          "publication_location": {
            "type": "string",
            "description": "Local onde o livro foi publicado.",
            "example": "Rio de Janeiro"
          },
          "isbn": {
            "type": "string",
            "description": "ISBN do livro.",
            "example": "9788520904161"
          },
          "volume": {
            "type": "number",
            "description": "Volume do livro.",
            "example": 1
          },
          "genre": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AÇÃO E AVENTURA",
                "CLÁSSICOS",
                "COMÉDIA",
                "CONTOS",
                "DRAMA",
                "FANTASIA",
                "FICÇÃO CIENTÍFICA",
                "FICÇÃO HISTÓRICA",
                "FICÇÃO POLICIAL/CRIME",
                "HORROR/TERROR",
                "MISTÉRIO/SUSPENSE",
                "REALISMO MÁGICO",
                "ROMANCE",
                "ROMANCE CONTEMPORÂNEO",
                "ROMANCE HISTÓRIOCO",
                "CHICK-LIT",
                "ROMANCE DE ÉPOCA",
                "THRILLER/PSICOLÓGICO",
                "TRAGÉDIA",
                "WESTERN/FAROESTE",
                "YOUNG ADULT (YA)",
                "DISTOPIA",
                "AUTOBIOGRAFIA",
                "BIOGRAFIA",
                "MEMÓRIAS",
                "HISTÓRIA",
                "CIÊNCIA E TECNOLOGIA",
                "ECONOMIA E NEGÓCIOS",
                "EDUCAÇÃO",
                "FILOSOFIA",
                "PSICOLOGIA",
                "RELIGIÃO/ESPIRITUALIDADE",
                "AUTOAJUDA",
                "SAÚDE E BEM-ESTAR",
                "VIAGENS",
                "ARTE E De DESIGN",
                "GASTRONOMIA/CULINÁRIA",
                "ENSAIOS",
                "JORNALISMO/REPORTAGEM",
                "POLÍTICA E SOCIEDADE",
                "CONTOS DE FADAS",
                "LIVROS ILUSTRADOS",
                "FICÇÃO JUVENIL",
                "FÁBULAS",
                "POESIA LÍRICA",
                "POESIA ÉPICA",
                "TRAGÉDIA TEATRAL",
                "COMÉDIA TEATRAL",
                "DRAMA TEATRAL",
                "ANTOLOGIAS",
                "MANGAS E QUADRINHOS",
                "LIVROS INTERATIVOS",
                "LITERATURA EXPERIMENTAL"
              ]
            },
            "description": "Volume do livro.",
            "example": ["Fantasia", "Clássicos"]
          }
        }
      },
      "ResBodyToBookSimplified": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id do livro na base de dados da aplicação.",
            "example": "67a0cf5ee43cbc3f689e3757"
          },
          "title": {
            "type": "string",
            "description": "Titulo do livro.",
            "example": "O Hobbit"
          },
          "author": {
            "type": "array",
            "description": "Autor(es) do livro.",
            "items": { "type": "string" },
            "example": ["J. R. R. Tolkien"]
          },
          "publication_year": {
            "type": "number",
            "description": "Ano no qual o livro foi publicado.",
            "example": 1937
          },

          "genre": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AÇÃO E AVENTURA",
                "CLÁSSICOS",
                "COMÉDIA",
                "CONTOS",
                "DRAMA",
                "FANTASIA",
                "FICÇÃO CIENTÍFICA",
                "FICÇÃO HISTÓRICA",
                "FICÇÃO POLICIAL/CRIME",
                "HORROR/TERROR",
                "MISTÉRIO/SUSPENSE",
                "REALISMO MÁGICO",
                "ROMANCE",
                "ROMANCE CONTEMPORÂNEO",
                "ROMANCE HISTÓRIOCO",
                "CHICK-LIT",
                "ROMANCE DE ÉPOCA",
                "THRILLER/PSICOLÓGICO",
                "TRAGÉDIA",
                "WESTERN/FAROESTE",
                "YOUNG ADULT (YA)",
                "DISTOPIA",
                "AUTOBIOGRAFIA",
                "BIOGRAFIA",
                "MEMÓRIAS",
                "HISTÓRIA",
                "CIÊNCIA E TECNOLOGIA",
                "ECONOMIA E NEGÓCIOS",
                "EDUCAÇÃO",
                "FILOSOFIA",
                "PSICOLOGIA",
                "RELIGIÃO/ESPIRITUALIDADE",
                "AUTOAJUDA",
                "SAÚDE E BEM-ESTAR",
                "VIAGENS",
                "ARTE E De DESIGN",
                "GASTRONOMIA/CULINÁRIA",
                "ENSAIOS",
                "JORNALISMO/REPORTAGEM",
                "POLÍTICA E SOCIEDADE",
                "CONTOS DE FADAS",
                "LIVROS ILUSTRADOS",
                "FICÇÃO JUVENIL",
                "FÁBULAS",
                "POESIA LÍRICA",
                "POESIA ÉPICA",
                "TRAGÉDIA TEATRAL",
                "COMÉDIA TEATRAL",
                "DRAMA TEATRAL",
                "ANTOLOGIAS",
                "MANGAS E QUADRINHOS",
                "LIVROS INTERATIVOS",
                "LITERATURA EXPERIMENTAL"
              ]
            },
            "description": "Volume do livro.",
            "example": ["Fantasia", "Clássicos"]
          }
        }
      },
      "ReqBodyToBookUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Titulo do livro.",
            "example": "O Hobbit"
          },
          "author": {
            "type": "array",
            "description": "Autor(es) do livro.",
            "items": { "type": "string" },
            "example": ["J. R. R. Tolkien"]
          },
          "edition": {
            "type": "string",
            "description": "Edição do livro.",
            "example": "1"
          },
          "publication_year": {
            "type": "number",
            "description": "Ano no qual o livro foi publicado.",
            "example": 1937
          },
          "publisher": {
            "type": "string",
            "description": "Editora que publicou o livro.",
            "example": "Nova Fronteira"
          },
          "publication_location": {
            "type": "string",
            "description": "Local onde o livro foi publicado.",
            "example": "Rio de Janeiro"
          },
          "isbn": {
            "type": "string",
            "description": "ISBN do livro.",
            "example": "9788520904161"
          },
          "volume": {
            "type": "number",
            "description": "Volume do livro.",
            "example": 1
          },
          "genre": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AÇÃO E AVENTURA",
                "CLÁSSICOS",
                "COMÉDIA",
                "CONTOS",
                "DRAMA",
                "FANTASIA",
                "FICÇÃO CIENTÍFICA",
                "FICÇÃO HISTÓRICA",
                "FICÇÃO POLICIAL/CRIME",
                "HORROR/TERROR",
                "MISTÉRIO/SUSPENSE",
                "REALISMO MÁGICO",
                "ROMANCE",
                "ROMANCE CONTEMPORÂNEO",
                "ROMANCE HISTÓRIOCO",
                "CHICK-LIT",
                "ROMANCE DE ÉPOCA",
                "THRILLER/PSICOLÓGICO",
                "TRAGÉDIA",
                "WESTERN/FAROESTE",
                "YOUNG ADULT (YA)",
                "DISTOPIA",
                "AUTOBIOGRAFIA",
                "BIOGRAFIA",
                "MEMÓRIAS",
                "HISTÓRIA",
                "CIÊNCIA E TECNOLOGIA",
                "ECONOMIA E NEGÓCIOS",
                "EDUCAÇÃO",
                "FILOSOFIA",
                "PSICOLOGIA",
                "RELIGIÃO/ESPIRITUALIDADE",
                "AUTOAJUDA",
                "SAÚDE E BEM-ESTAR",
                "VIAGENS",
                "ARTE E De DESIGN",
                "GASTRONOMIA/CULINÁRIA",
                "ENSAIOS",
                "JORNALISMO/REPORTAGEM",
                "POLÍTICA E SOCIEDADE",
                "CONTOS DE FADAS",
                "LIVROS ILUSTRADOS",
                "FICÇÃO JUVENIL",
                "FÁBULAS",
                "POESIA LÍRICA",
                "POESIA ÉPICA",
                "TRAGÉDIA TEATRAL",
                "COMÉDIA TEATRAL",
                "DRAMA TEATRAL",
                "ANTOLOGIAS",
                "MANGAS E QUADRINHOS",
                "LIVROS INTERATIVOS",
                "LITERATURA EXPERIMENTAL"
              ]
            },
            "description": "Volume do livro.",
            "example": ["Fantasia", "Clássicos"]
          }
        }
      },

      "CreateCollectionReqBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Titulo da coleção.",
            "example": "Livros de Tolkien"
          },
          "description": {
            "type": "string",
            "description": "Breve descrição da coleção.",
            "example": "Coleção contendo livros de Tolkien."
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "private"],
            "description": "Visibilidade da coleção.",
            "example": "private"
          },
          "books_collection": {
            "type": "array",
            "description": "Livros presentes na coleção.",
            "items": {
              "type": "object",
              "properties": {
                "book_id": {
                  "type": "string",
                  "description": "Id do livro na base de dados da aplicação.",
                  "example": "67b0a6493e3c1d1111fa3d93"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "LEITURA COMPLETA",
                    "LEITURA PENDENTE",
                    "EM LEITURA",
                    "LEITURA CANCELADA"
                  ],
                  "description": "Estado em que se encontra a leitura do livro.",
                  "example": "LEITURA PENDENTE"
                }
              }
            }
          },
          "user_id": {
            "type": "string",
            "description": "Id do usuário que faz a requisição na base de dados.",
            "example": "67aa5023baa7ed1742044990"
          }
        },
        "required": [
          "title",
          "description",
          "visibility",
          "books_collection",
          "user_id"
        ]
      },
      "ResBodyToCollectionDefault": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Titulo da coleção.",
            "example": "Livros de Tolkien"
          },
          "description": {
            "type": "string",
            "description": "Breve descrição da coleção.",
            "example": "Coleção contendo livros de Tolkien."
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "private"],
            "description": "Visibilidade da coleção.",
            "example": "private"
          },
          "books_collection": {
            "type": "array",
            "description": "Livros presentes na coleção.",
            "items": {
              "type": "object",
              "properties": {
                "book_id": {
                  "type": "string",
                  "description": "Id do livro na base de dados da aplicação.",
                  "example": "67b0a6493e3c1d1111fa3d93"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "LEITURA COMPLETA",
                    "LEITURA PENDENTE",
                    "EM LEITURA",
                    "LEITURA CANCELADA"
                  ],
                  "description": "Estado em que se encontra a leitura do livro.",
                  "example": "LEITURA PENDENTE"
                }
              }
            }
          },
          "user_id": {
            "type": "string",
            "description": "Id do usuário que faz a requisição na base de dados.",
            "example": "67aa5023baa7ed1742044990"
          },
          "_id": {
            "type": "string",
            "description": "Id da coleção na base de dados.",
            "example": "67aa5023baa7ed1742044990"
          }
        }
      },
      "ResBodyToCollectionSimplified": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Titulo da coleção.",
            "example": "Livros de Tolkien"
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "private"],
            "description": "Visibilidade da coleção.",
            "example": "private"
          },
          "_id": {
            "type": "string",
            "description": "Id da coleção na base de dados.",
            "example": "67aa5023baa7ed1742044990"
          }
        }
      },
      "ReqBodyToUpdateCollectionInfo": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Titulo da coleção.",
            "example": "Livros de Tolkien"
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "private"],
            "description": "Visibilidade da coleção.",
            "example": "private"
          },
          "description": {
            "type": "string",
            "description": "Breve descrição da coleção.",
            "example": "Coleção contendo livros de J. R. R. Tolkien."
          }
        }
      },
      "ReqBodyToUpdateBookInCollection": {
        "type": "object",
        "properties": {
          "books_collection": {
            "type": "array",

            "items": {
              "type": "object",
              "properties": {
                "book_id": {
                  "type": "string",
                  "description": "Id do livro na collection/table de livros"
                },
                "operation": {
                  "type": "string",
                  "enum": ["update", "insert", "remove"],
                  "description": "Operação que será feita no livro"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "LEITURA COMPLETA",
                    "LEITURA PENDENTE",
                    "EM LEITURA",
                    "LEITURA CANCELADA"
                  ],
                  "description": "Estado da leitura do livro"
                }
              },
              "required": ["book_id", "operation"]
            },

            "example": {
              "books_collection": [
                {
                  "book_id": "67b0a6493e3c1d1111fa3d93",
                  "operation": "update",
                  "status": "Em Leitura"
                }
              ]
            }
          }
        }
      },

      "InternalServerError": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Ocorreu algum erro interno ao servidor.",
            "type": "string",
            "example": "An internal server error occurred."
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A requisição não contém todas as propriedades necessárias.",
            "examples": ["Password is required.", "User already registered."]
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A requisição pretende buscar uma entidade que não está salvo no banco de dados.",
            "examples": [
              "User not found.",
              "Book not found.",
              "Collection not found."
            ]
          }
        }
      }
    }
  }
}
